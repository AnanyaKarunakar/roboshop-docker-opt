networks:
  default:
    driver: bridge
    name: roboshop
    external: true  # Uncomment only if network is pre-created

volumes:
  mongodb: #This is equal to docker volume create mogodb
  redis:
  mysql:
  rabbitmq: #This is equal to docker volume create rabbitmq
services:
  mongodb:
    image: karna0323/mongodb:v2
    container_name: mongodb
    volumes:
    - mongodb:/data/db

  catalogue:
    image: karna0323/catalogue:v2
    container_name: catalogue  
    depends_on:
      - mongodb

  redis:
    image: redis:7.0
    container_name: redis
    volumes:
    - redis:/data

  user:
    image: karna0323/user:v2
    container_name: user
    depends_on:
      - redis
      - mongodb

  cart:
    image: karna0323/cart:v2
    container_name: cart
    depends_on:
      - catalogue
      - redis

  mysql:
    image: karna0323/mysql:v2
    container_name: mysql
    volumes:
    - mysql:/var/lib/mysql

  shipping:
    image: karna0323/shipping:v2
    container_name: shipping
    depends_on:
      - mysql
      - cart

  rabbitmq:
    image: rabbitmq:3
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: roboshop
      RABBITMQ_DEFAULT_PASS: roboshop123
    volumes:
    - rabbitmq:/var/lib/rabbitmq

  payment:
    image: karna0323/payment:v2
    container_name: payment
    environment:
      CART_HOST: cart
      CART_PORT: 8080
      USER_HOST: user
      USER_PORT: 8080
      AMQP_HOST: rabbitmq
      AMQP_USER: roboshop
      AMQP_PASS: roboshop123
    depends_on:
    - rabbitmq
    - cart
    - user

  frontend:
    image: karna0323/frontend:v2
    container_name: frontend
    ports:
    - "8080:80"
    depends_on:
    - catalogue
    - user
    - cart
    - shipping
    - payment